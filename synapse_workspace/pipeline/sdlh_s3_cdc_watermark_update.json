{
	"name": "sdlh_s3_cdc_watermark_update",
	"properties": {
		"activities": [
			{
				"name": "update_watermark_value",
				"description": "This for loop iterates through the each required item from ETL.SQLTableMetadata where a new watermark value is required to be set.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "lookup_tables_watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lookup_tables_watermark').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "lookup_set_watermark_value",
							"description": "Lookup the new watermark value from ETL.Log",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT MAX(CAST(NEW_INCREMENTAL_KEY_VALUE AS DATETIME2)) AS NEW_WATERMARK_VALUE\nFROM [ETL].[Log]\nWHERE [SOURCE_TYPE] = '@{item().SOURCE_TYPE}'\nAND [SOURCE_SYSTEM] = '@{item().SOURCE_SYSTEM}'\nAND [OBJECT_NAME] = REPLACE('@{item().OBJECT_NAME}', '-', '_')\nAND [TRIGGERING_PIPELINE_RUN_ID] = '@{pipeline().parameters.PARAM_TRIGGERING_PIPELINE_RUN_ID}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "sdlh_azuresql_db_metadata",
									"type": "DatasetReference",
									"parameters": {
										"METADATA_TABLE_NAME": "NA"
									}
								}
							}
						},
						{
							"name": "if_update_required",
							"description": "Check if there are any required tables before executing required activity.",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "lookup_set_watermark_value",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(empty(activity('lookup_set_watermark_value').output.firstRow.NEW_WATERMARK_VALUE))\n\n",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "create_log_entry_no_action_required",
										"description": "This lookup runs a stored procedure which generates a log entry in the ETL.Log table.",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderStoredProcedureName": "[ETL].[usp_InsertLog]",
												"storedProcedureParameters": {
													"SOURCE_TYPE": {
														"type": "String",
														"value": {
															"value": "@pipeline().parameters.PARAM_SOURCE_TYPE",
															"type": "Expression"
														}
													},
													"SOURCE_SYSTEM": {
														"type": "String",
														"value": {
															"value": "@pipeline().parameters.PARAM_SOURCE_SYSTEM",
															"type": "Expression"
														}
													},
													"SOURCE_GROUPING_ID": {
														"type": "Int32",
														"value": {
															"value": "@pipeline().parameters.PARAM_SOURCE_GROUPING_ID",
															"type": "Expression"
														}
													},
													"OBJECT_NAME": {
														"type": "String",
														"value": {
															"value": "@item().OBJECT_NAME",
															"type": "Expression"
														}
													},
													"DATABASE_NAME": {
														"type": "String",
														"value": {
															"value": "@item().DATABASE_NAME",
															"type": "Expression"
														}
													},
													"SCHEMA_NAME": {
														"type": "String",
														"value": {
															"value": "@item().SCHEMA_NAME",
															"type": "Expression"
														}
													},
													"TABLE_NAME": {
														"type": "String",
														"value": {
															"value": "@item().TABLE_NAME",
															"type": "Expression"
														}
													},
													"TRIGGER_TIME": {
														"type": "DateTime",
														"value": {
															"value": "@pipeline().TriggerTime",
															"type": "Expression"
														}
													},
													"TRIGGER_TYPE": {
														"type": "String",
														"value": {
															"value": "@pipeline().TriggerType",
															"type": "Expression"
														}
													},
													"PIPELINE_RUN_ID": {
														"type": "String",
														"value": {
															"value": "@pipeline().RunId",
															"type": "Expression"
														}
													},
													"PIPELINE_NAME": {
														"type": "String",
														"value": {
															"value": "@pipeline().Pipeline",
															"type": "Expression"
														}
													},
													"TRIGGERING_PIPELINE_RUN_ID": {
														"type": "String",
														"value": {
															"value": "@pipeline().parameters.PARAM_TRIGGERING_PIPELINE_RUN_ID",
															"type": "Expression"
														}
													},
													"TRIGGERING_PIPELINE_NAME": {
														"type": "String",
														"value": {
															"value": "@pipeline().parameters.PARAM_TRIGGERING_PIPELINE_NAME",
															"type": "Expression"
														}
													},
													"OPERATION": {
														"type": "String",
														"value": "No Action Required"
													},
													"COMPONENT_NAME": {
														"type": "String",
														"value": "update_watermark"
													},
													"TARGET_SYSTEM": {
														"type": "String",
														"value": null
													},
													"START_TIME": {
														"type": "DateTime",
														"value": {
															"value": "@utcnow()",
															"type": "Expression"
														}
													},
													"END_TIME": {
														"type": "DateTime",
														"value": {
															"value": "@utcnow()",
															"type": "Expression"
														}
													},
													"DURATION_SECONDS": {
														"type": "Int32",
														"value": null
													},
													"INSERTS": {
														"type": "Int32",
														"value": null
													},
													"UPDATES": {
														"type": "Int32",
														"value": null
													},
													"DELETES": {
														"type": "Int32",
														"value": null
													},
													"ERROR_MESSAGE": {
														"type": "String",
														"value": null
													},
													"NEW_INCREMENTAL_KEY_VALUE": {
														"type": "String",
														"value": "No Change"
													},
													"PREVIOUS_INCREMENTAL_KEY_VALUE": {
														"type": "String",
														"value": null
													}
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "sdlh_azuresql_db_metadata",
												"type": "DatasetReference",
												"parameters": {
													"METADATA_TABLE_NAME": "NA"
												}
											},
											"firstRowOnly": false
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "stored_procedure_write_watermark_activity",
										"description": "Execute stored procedure to update the watermark of each required table,",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[ETL].[usp_SQLUpdateWatermark]",
											"storedProcedureParameters": {
												"PARAM_DATABASE_NAME": {
													"value": {
														"value": "@item().DATABASE_NAME",
														"type": "Expression"
													},
													"type": "String"
												},
												"PARAM_NEW_WATERMARK_VALUE": {
													"value": {
														"value": "@activity('lookup_set_watermark_value').output.firstRow.NEW_WATERMARK_VALUE",
														"type": "Expression"
													},
													"type": "String"
												},
												"PARAM_SCHEMA_NAME": {
													"value": {
														"value": "@item().SCHEMA_NAME",
														"type": "Expression"
													},
													"type": "String"
												},
												"PARAM_SOURCE_SYSTEM": {
													"value": {
														"value": "@item().SOURCE_SYSTEM",
														"type": "Expression"
													},
													"type": "String"
												},
												"PARAM_SOURCE_TYPE": {
													"value": {
														"value": "@item().SOURCE_TYPE",
														"type": "Expression"
													},
													"type": "String"
												},
												"PARAM_TABLE_NAME": {
													"value": {
														"value": "@item().TABLE_NAME",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "azure_sql_data_no_param_azir",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "create_log_entry_watermark",
										"description": "This lookup runs a stored procedure which generates a log entry in the ETL.Log table.",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "stored_procedure_write_watermark_activity",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderStoredProcedureName": "[ETL].[usp_InsertLog]",
												"storedProcedureParameters": {
													"SOURCE_TYPE": {
														"type": "String",
														"value": {
															"value": "@pipeline().parameters.PARAM_SOURCE_TYPE",
															"type": "Expression"
														}
													},
													"SOURCE_SYSTEM": {
														"type": "String",
														"value": {
															"value": "@pipeline().parameters.PARAM_SOURCE_SYSTEM",
															"type": "Expression"
														}
													},
													"SOURCE_GROUPING_ID": {
														"type": "Int32",
														"value": {
															"value": "@pipeline().parameters.PARAM_SOURCE_GROUPING_ID",
															"type": "Expression"
														}
													},
													"OBJECT_NAME": {
														"type": "String",
														"value": {
															"value": "@item().OBJECT_NAME",
															"type": "Expression"
														}
													},
													"DATABASE_NAME": {
														"type": "String",
														"value": {
															"value": "@item().DATABASE_NAME",
															"type": "Expression"
														}
													},
													"SCHEMA_NAME": {
														"type": "String",
														"value": {
															"value": "@item().SCHEMA_NAME",
															"type": "Expression"
														}
													},
													"TABLE_NAME": {
														"type": "String",
														"value": {
															"value": "@item().TABLE_NAME",
															"type": "Expression"
														}
													},
													"TRIGGER_TIME": {
														"type": "DateTime",
														"value": {
															"value": "@pipeline().TriggerTime",
															"type": "Expression"
														}
													},
													"TRIGGER_TYPE": {
														"type": "String",
														"value": {
															"value": "@pipeline().TriggerType",
															"type": "Expression"
														}
													},
													"PIPELINE_RUN_ID": {
														"type": "String",
														"value": {
															"value": "@pipeline().RunId",
															"type": "Expression"
														}
													},
													"PIPELINE_NAME": {
														"type": "String",
														"value": {
															"value": "@pipeline().Pipeline",
															"type": "Expression"
														}
													},
													"TRIGGERING_PIPELINE_RUN_ID": {
														"type": "String",
														"value": {
															"value": "@pipeline().parameters.PARAM_TRIGGERING_PIPELINE_RUN_ID",
															"type": "Expression"
														}
													},
													"TRIGGERING_PIPELINE_NAME": {
														"type": "String",
														"value": {
															"value": "@pipeline().parameters.PARAM_TRIGGERING_PIPELINE_NAME",
															"type": "Expression"
														}
													},
													"OPERATION": {
														"type": "String",
														"value": "Execute Stored Procedure"
													},
													"COMPONENT_NAME": {
														"type": "String",
														"value": "update_watermark"
													},
													"TARGET_SYSTEM": {
														"type": "String",
														"value": "Metadata DB"
													},
													"START_TIME": {
														"type": "DateTime",
														"value": {
															"value": "@utcnow()",
															"type": "Expression"
														}
													},
													"END_TIME": {
														"type": "DateTime",
														"value": {
															"value": "@utcnow()",
															"type": "Expression"
														}
													},
													"DURATION_SECONDS": {
														"type": "Int32",
														"value": null
													},
													"INSERTS": {
														"type": "Int32",
														"value": null
													},
													"UPDATES": {
														"type": "Int32",
														"value": null
													},
													"DELETES": {
														"type": "Int32",
														"value": null
													},
													"ERROR_MESSAGE": {
														"type": "String",
														"value": null
													},
													"NEW_INCREMENTAL_KEY_VALUE": {
														"type": "String",
														"value": {
															"value": "@formatDateTime(activity('lookup_set_watermark_value').output.firstRow.NEW_WATERMARK_VALUE, 'yyyy-MM-dd HH:mm:ss.fffffffZ')\n",
															"type": "Expression"
														}
													},
													"PREVIOUS_INCREMENTAL_KEY_VALUE": {
														"type": "String",
														"value": null
													}
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "sdlh_azuresql_db_metadata",
												"type": "DatasetReference",
												"parameters": {
													"METADATA_TABLE_NAME": "NA"
												}
											},
											"firstRowOnly": false
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "lookup_tables_watermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT [SOURCE_TYPE]\n    ,[SOURCE_SYSTEM]\n    ,CASE\n        WHEN UPPER('@{pipeline().parameters.PARAM_SOURCE_TYPE}') = 'MYSQL' THEN LOWER(REPLACE(CONCAT(SOURCE_TYPE,'_',SOURCE_SYSTEM,'_',DATABASE_NAME,'_',TABLE_NAME),' ', ''))\n        WHEN UPPER('@{pipeline().parameters.PARAM_SOURCE_TYPE}') = 'MY_SQL' THEN LOWER(REPLACE(CONCAT(SOURCE_TYPE,'_',SOURCE_SYSTEM,'_',DATABASE_NAME,'_',TABLE_NAME),' ', ''))\n        ELSE LOWER(REPLACE(CONCAT(SOURCE_TYPE,'_',SOURCE_SYSTEM,'_',REPLACE(DATABASE_NAME, '-', '_'),'_',SCHEMA_NAME,'_',TABLE_NAME),' ', ''))\n    END AS [OBJECT_NAME]\n    ,[DATABASE_NAME]\n    ,[SCHEMA_NAME]\n    ,[TABLE_NAME]\nFROM [ETL].[SQLTableMetadata]\nWHERE [SOURCE_TYPE] = '@{pipeline().parameters.PARAM_SOURCE_TYPE}'\nAND [SOURCE_SYSTEM] = '@{pipeline().parameters.PARAM_SOURCE_SYSTEM}'\nAND [SOURCE_GROUPING_ID] = @{pipeline().parameters.PARAM_SOURCE_GROUPING_ID}\nAND [IS_Enabled] = 1\nAND [LOAD_TYPE] = 'CDC'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "sdlh_azuresql_db_metadata",
						"type": "DatasetReference",
						"parameters": {
							"METADATA_TABLE_NAME": "NA"
						}
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"PARAM_SOURCE_TYPE": {
				"type": "string"
			},
			"PARAM_SOURCE_SYSTEM": {
				"type": "string"
			},
			"PARAM_SOURCE_GROUPING_ID": {
				"type": "string"
			},
			"PARAM_TRIGGERING_PIPELINE_NAME": {
				"type": "string"
			},
			"PARAM_TRIGGERING_PIPELINE_RUN_ID": {
				"type": "string"
			}
		},
		"folder": {
			"name": "SDLH/Common"
		},
		"annotations": []
	}
}